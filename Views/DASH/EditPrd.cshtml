@model NEWTEST.TBL_PRODUCTS

@{
    ViewBag.Title = "EditPrd";
    Layout = "~/Views/Shared/_DashLayout.cshtml";
}

@using (Html.BeginForm())
{
    <fieldset>

        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        @if (@ViewBag.Message != null)
        {
            <div style="border: 1px solid red">
                @ViewBag.Message
            </div>
        }

        <div class="container tm-mt-big tm-mb-big">
            <div class="row">
                <div class="col-xl-9 col-lg-10 col-md-12 col-sm-12 mx-auto">
                    <div class="tm-bg-primary-dark tm-block tm-block-h-auto">
                        <div class="row tm-edit-product-row">
                            <div class="col-xl-6 col-lg-6 col-md-12">
                                <form action="" class="tm-edit-product-form">
                                    <div class="form-group mb-3">
                                        <label for="name">Product Name</label>
                                        @Html.EditorFor(model => model.P_NAME, new { htmlAttributes = new { @class = "form-control validate" } })
                                    </div>
                                    <div class="form-group mb-3">
                                        <label for="description">Description</label>
                                        @Html.EditorFor(model => model.P_DISCRIPTION, new { htmlAttributes = new { @class = "form-control validate" } })
                                    </div>
                                    <div class="form-group mb-3">
                                        <label for="price">Product Price</label>
                                        @Html.EditorFor(model => model.P_PRICE, new { htmlAttributes = new { @class = "form-control validate" } })
                                    </div>
                                    <div class="form-group mb-3">
                                        <label for="price">Product Statut</label>
                                        @Html.DropDownListFor(m => m.P_STATUT,
                                            new List<SelectListItem>
                                            {
                                               new SelectListItem{ Text="In Stock", Value = "1" },
                                               new SelectListItem{ Text="Out of Stock", Value = "0" },
                                            }, new { @class = "custom-select tm-select-accounts" }
    )
                                    </div>

                                </form>
                            </div>
                            <div class="col-xl-6 col-lg-6 col-md-12 mx-auto mb-4">
                                <div class="tm-product-img-dummy mx-auto">
                                    <i class="fas fa-cloud-upload-alt tm-upload-icon" onclick="document.getElementById('fileInput').click();"></i>
                                </div>
                                <div class="custom-file mt-3 mb-3">
                                    <input id="fileInput" type="file" style="display:none;">
                                    @Html.TextBoxFor(model => model.P_STATUT, new { type = "file", accept = "image/*", @class = "btn btn-primary btn-block mx-auto" })
                                </div>
                            </div>
                            <div class="col-12">
                                <button type="submit" class="btn btn-primary btn-block text-uppercase">Add Product Now</button>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>

    </fieldset>
}